<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999999999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_Persistency</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Setup for global variables

global.saveName = "saveFinl1"

//open .ini file
ini_open(global.saveName);

//Settings sliders
global.music_vol = ini_read_real("Settings","music",0.5)
global.sound_vol = ini_read_real("Settings","sound",0.5)
global.fov = ini_read_real("Settings","fov",230)

//Room
global.true_end = ini_read_real("Game","true end",false)
global.currentRoom = ini_read_real("Game","room",rm_menu0)
global.currentMenu = ini_read_real("Game","menu",rm_menu0)

//Platform crash
global.crash = ini_read_real("Platformer","crash",false)
global.crashTimer = ini_read_real("Platformer","crashTimer",120)
global.music_load = ini_read_real("Platformer","music_load",1)

//VN doctor
global.name = ini_read_string("Doctor","name","")
global.alternative = ini_read_real("Doctor","alternative",0)
global.delay = ini_read_real("Doctor","delay",0)

//Coins
global.coins = ini_read_real("Platformer","coins",0)

//Debug
debug = true;
global.debug_visibility = false;

//RPG variables
global.runDialogue = false;
global.cutsceneNumber = 0;
global.runCutscene = false;
global.textSkip = false
global.cDial = false;
global.ID = 0;
global.targetObject = 0;
global.flowerTimer = false
global.flowerTime = ini_read_real("RPG","flowerTime",75)
global.gotFlower = ini_read_real("RPG","gotFlower",false)
global.block = ini_read_real("RPG","block",true)

global.tsun_sprite = ini_read_real("RPG","tsun_sprite",spr_tsun)
global.teach_sprite = ini_read_real("RPG","teach_sprite",spr_teach)
global.rich_sprite = ini_read_real("RPG","rich_sprite",spr_teach)
global.shy_sprite = ini_read_real("RPG","shy_sprite",spr_teach)
global.ticket_booth = ini_read_real("RPG","ticket_booth",spr_ticket_booth)

global.tsun_got = ini_read_real("RPG","tsun_got",false)
global.teach_got = ini_read_real("RPG","teach_got",false)
global.rad_got = ini_read_real("RPG","rad_got",false)

global.rad_state = ini_read_real("RPG","rad_state",0)
global.teach_state = ini_read_real("RPG","teach_state",0)
global.temika_state = ini_read_real("RPG","temika_state",0)

global.tsuntime = ini_read_real("RPG","tsuntime",-1)

//RPG arrays
global.cutsceneID[0] = 0;

global.triggerState[0,0] = 0; 
global.triggerState[0,1] = 0; 

global.inventory[0] = 0;

ini_close()
room_goto(global.currentMenu)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update Interpolation

if global.crash == false
{
    
}
else if  global.crash == true
{
    window_set_cursor(cr_hourglass)
}
//Set interpolation
if room == rm_fight || room == rm_ending || room == rpg_intro || room == rm_rpg_1 || room == rm_rpg_2 || room == rm_rpg_3 || room == rm_rpg_4 || room == rm_rpg_5 ||  room == rm_rpg_3to4 || room == rm_rpg_theatre ||
room == rm_vn_doctor || room == rm_temika || room == rm_platformer_title || room == rm_platformer_1 || room == rm_platformer_2 || (room == rm_platformer_3 &amp;&amp; global.crash == false) || room == rm_rpg_shy
{
    texture_set_interpolation(false);
}
else
{
    texture_set_interpolation(true);
}

if global.tsuntime &gt; -1
{
    global.tsuntime += 1/60
    show_debug_message(string(global.tsuntime))
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Music load/unload
if room == rm_menu
{
    scr_music_management(audiogroup_menu_music, audiogroup_menu_sf)
}
else if room == rm_vn_doctor || room == rm_credits
{
    scr_music_management(audiogroup_vn_music, audiogroup_vn_sf)
}
else if room == rm_menu0
{
    scr_music_management(audiogroup_platformer_music, audiogroup_platformer_sf)
}
else if room == rm_platformer_title
{
    scr_music_management(audiogroup_platformer_music, audiogroup_platformer_sf)
}
else if room == rpg_intro || room == rm_rpg_1 || room == rm_rpg_2 || room == rm_rpg_3 || room == rm_rpg_3to4 || room == rm_rpg_4 || room == rm_rpg_5 || room == rm_rpg_theatre
{
    scr_music_management(audiogroup_rpg_music, audiogroup_rpg_sf)
}
else if room == rm_temika
{
    scr_music_management(audiogroup_temika_music, audiogroup_temika_sf)
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="115">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fullscreen
if global.crash == false
{
    if window_get_fullscreen()
    {
        window_set_fullscreen(false);
    }
    else 
    {
        window_set_fullscreen(true);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="113">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
///Go back to main menu
room_goto(rm_menu)

//Platformer reset
global.crash = false;
global.crashTimer = 120;
window_set_caption("Tem Dayting Sym 2")
window_set_cursor(cr_arrow)

//RPG reset
if instance_exists(obj_player)
{
    with obj_player
    {
        instance_destroy()
    }
    with obj_black_bars
    {
        instance_destroy()
    }
}
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="112">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debug visible
/*
if debug == true
{
    show_debug_overlay(true)
    global.debug_visibility = true
    debug = false
}
else if debug == false
{
    show_debug_overlay(false)
    global.debug_visibility = false
    debug = true
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

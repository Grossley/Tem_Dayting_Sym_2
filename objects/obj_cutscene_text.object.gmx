<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99999999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alpha = 0;
print = "";
time = 0;
strokeOffset = 1;
position = ""
bleeptimer = 0
image_speed = 0.1;
depth = depth-instance_number(obj_text);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//Draw dialogue box
if position == "top"
{
    draw_set_color(c_white)
    draw_rectangle(view_xview[0] + 69, view_yview[0] + 5, view_xview[0] +358, view_yview[0] + 81, false)
    draw_set_color(c_black)
    draw_rectangle(view_xview[0] + 72, view_yview[0] + 8, view_xview[0] +355, view_yview[0] + 78, false)
}
else if position == "bottom"
{
    draw_set_color(c_white)
    draw_rectangle(view_xview[0] + 69, view_yview[0] + 160, view_xview[0] +358, view_yview[0] + 236, false)
    draw_set_color(c_black)
    draw_rectangle(view_xview[0] + 72, view_yview[0] + 163, view_xview[0] +355, view_yview[0] + 233, false)
}

///Add Letters Over Time w/speeding up
if (time &lt;= text_length)
{
    if bleeptimer &lt;=0
    {
        run = floor(random_range(0.1,4.9))
        audio_stop_sound(snd_rpg_bleep)
        audio_play_sound(snd_rpg_bleep, 9, false);
        switch(run)
        {
            case 0: audio_sound_pitch(snd_rpg_bleep, 0.2) break;
            case 1: audio_sound_pitch(snd_rpg_bleep, 0.3) break;
            case 2: audio_sound_pitch(snd_rpg_bleep, 0.4) break;
            case 3: audio_sound_pitch(snd_rpg_bleep, 0.5) break;
            case 4: audio_sound_pitch(snd_rpg_bleep, 0.6) break;
        }
        
        audio_sound_gain(snd_rpg_bleep,global.sound_vol*0.8, 0);
        bleeptimer = 10
    }
    else
    {
        bleeptimer--
    }
    
    if string_copy(text,time,time+1) == " "
    {
        time = ceil(time)+1
    }
    else
    {
        time += spd;   
    }
    
    print = string_copy(text,0,time);
    print2 = global.cutscene[global.cutsceneNumber,2];
    
    //speed-up text
    if ((keyboard_check_pressed(ord('Z')) || gamepad_button_check_pressed(0,gp_face1)) &amp;&amp; global.textSkip == true)
    {
        spd = 1;
    }
    else if (keyboard_check_released(ord('Z')) || gamepad_button_check_released(0,gp_face1))
    {
        spd = .3
        global.textSkip = true
    }
    
    //Draw character's portrait
    if (portrait == 0)
    {
        //do nothing
    }
    else
    {
        if position == "top"
        {
            draw_sprite(portrait,-1,view_xview[0]+85,view_yview[0]+21) 
        }
        else if position == "bottom"
        {
            draw_sprite(portrait,-1,view_xview[0]+85,view_yview[0]+176) 
        }
    }
}

//Do when text finishes scrooling
else
{  
   //Check if it's okay to destroy
    if (keyboard_check_pressed(ord('Z')) || gamepad_button_check_pressed(0,gp_face1))
    {
        if (global.cutsceneLength &gt; global.cutsceneNumber + 1)
        {
            global.cutsceneNumber++;
            global.cutsceneWait = 0;
            global.cDial = false;
            instance_destroy()
        }
        else
        {
            global.runDialogue = false;
            global.runCutscene = false;
            global.cutsceneWait = 0;
            global.cutsceneNumber = 0;
            global.cDial = false;
            obj_player.useObjectAsTarget = false;
            obj_player.dialogueDelay = 10;
            obj_player.player_x = obj_player.x;
            obj_player.player_y = obj_player.y;
            room_goto(room);
            instance_destroy()
        }
    }
    
    //Draw character's portrait
    if (portrait == 0)
    {
        //do nothing
    }
    else
    {
        if position == "top"
        {
            draw_sprite(portrait,0,view_xview[0]+85,view_yview[0]+21) 
        }
        else if position == "bottom"
        {
            draw_sprite(portrait,0,view_xview[0]+85,view_yview[0]+176) 
        }
    }
}

//Render Text
draw_set_alpha(alpha);
if (alpha &lt; 1) alpha += 1 else alpha = 1;

draw_set_font(font);

draw_set_color(c_white);
draw_set_halign(fa_left);
draw_set_valign(fa_top);

//Draw Text
draw_set_color(c_white);
if position == "top"
{
    if (portrait == 0)
    {
        draw_text(view_xview[0] + 140 -60,view_yview[0] + 15,"*")
        draw_text_ext
        (
            view_xview[0] + 156 -60,
            view_yview[0] + 15,
            print,
            10 + font_size,
            maxlength +66
        )
    }
    else
    {
        draw_text(view_xview[0] + 140,view_yview[0] + 15,"*")
        draw_text_ext
        (
            view_xview[0] + 156,
            view_yview[0] + 15,
            print,
            10 + font_size,
            maxlength
        )
    }
}
else if position == "bottom"
{
    if (portrait == 0)
    {
        draw_text(view_xview[0] + 140 -60,view_yview[0] + 170,"*")
        draw_text_ext
        (
            view_xview[0] + 156 - 60,
            view_yview[0] + 170,
            print,
            10 + font_size,
            maxlength + 66
        )
    }
    else
    {
        draw_text(view_xview[0] + 140,view_yview[0] + 170,"*")
        draw_text_ext
        (
            view_xview[0] + 156,
            view_yview[0] + 170,
            print,
            10 + font_size,
            maxlength
        )
    }
}
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

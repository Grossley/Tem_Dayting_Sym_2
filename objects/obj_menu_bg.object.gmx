<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Create
dat = (date_get_day_of_year(date_current_datetime()) - (date_get_hour_of_year(date_current_datetime()) /24 ))
cor = (1 - dat) * 24

if !(cor &gt;= 6 &amp;&amp; cor &lt;= 22)
{
    alpha = 1
}
else
{
    alpha = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dat = (date_get_day_of_year(date_current_datetime()) - (date_get_hour_of_year(date_current_datetime()) /24 ))
cor = (1 - dat) * 24

if !(cor &gt;= 6 &amp;&amp; cor &lt;= 22)
{
    if(alpha&lt;1)
    {
        alpha +=0.005
    }
    if audio_group_is_loaded(audiogroup_menu_music)
    {
        if !audio_is_playing(snd_menu_music_night)
        {
            audio_stop_all();
            audio_play_sound(snd_menu_music_night,10,true)
            audio_sound_gain(snd_menu_music_night,global.music_vol, 0);
        }
    }
}
else
{
    if(alpha&gt;0)
    {
        alpha -=0.005
    }
    if audio_group_is_loaded(audiogroup_menu_music)
    {
        if !audio_is_playing(snd_menu_music_day)
        {
            audio_stop_all();
            audio_play_sound(snd_menu_music_day,10,true)
            audio_sound_gain(snd_menu_music_day,global.music_vol, 0);
        }
    }
}
global.delay += 0.4

draw_sprite_tiled_ext(spr_day, 0, 1 +global.delay, 1 +global.delay, 1, 1, c_white, 1);
draw_sprite_tiled_ext(spr_night, 0, 1 +global.delay, 1 +global.delay, 1, 1, c_white, alpha);

//draw true menu
if global.true_end == true
{
    draw_sprite(spr_true_menu,0,0,0)
}

draw_sprite_ext(spr_title,0,640,110,1,1,0,c_white,1 - alpha)
draw_sprite_ext(spr_title_2,0,640,110,1,1,0,c_white,alpha)
if !(cor &gt;= 6 &amp;&amp; cor &lt;= 22)
{
    draw_sprite_ext(spr_text,0,230,675,1,1,0,c_white,0.8)
}
else
{
    draw_sprite_ext(spr_text2,0,230,675,1,1,0,c_white,1)
}

if mouse_check_button_pressed(mb_left) &amp;&amp; point_in_rectangle(mouse_x,mouse_y,219,22,1060,184)
{
    audio_stop_sound(snd_squeaky)
    audio_play_sound(snd_squeaky,7,false)
    audio_sound_pitch(snd_squeaky,random_range(1,1.4))
    audio_sound_gain(snd_squeaky,0.2 * global.sound_vol,0)
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

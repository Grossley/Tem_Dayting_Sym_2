<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_arrow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99999999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>menu[0] = global.cutscene[global.cutsceneNumber,2];
menu[1] = global.cutscene[global.cutsceneNumber,4];

mpos = 0;
space = 20;
xoff = 190;
yoff = 30;
del = 60

image_speed = 0.5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var move = 0;
move -= max(keyboard_check_pressed(vk_up),gamepad_button_check_pressed(0,gp_padu),0)
move += max(keyboard_check_pressed(vk_down),gamepad_button_check_pressed(0,gp_padd),0)

if (move !=0)
{
    audio_play_sound(snd_int_1, 9, false);
    audio_sound_gain(snd_int_1,global.sound_vol*0.3, 0);
    mpos += move
    if (mpos &lt; 0)
    {
        mpos = array_length_1d(menu) -1;
    }
    if (mpos &gt; array_length_1d(menu) -1)
    {
        mpos = 0
    }
}

if 0 &lt; del
{
    del--
}

var push
push = max(keyboard_check_pressed(ord('Z')),gamepad_button_check_pressed(0,gp_face1),0)
if(push == 1) &amp;&amp; del &lt;=0
{
    audio_play_sound(snd_int_2, 9, false);
    audio_sound_gain(snd_int_2,global.sound_vol*0.2, 0);
    switch (mpos)
    {
        case 0:
            global.cutsceneNumber = scr_find_choice_label(global.cutscene[global.cutsceneNumber,3])
            instance_destroy()
            scr_cutscene_end()
            break;
        
        case 1:
            global.cutsceneNumber = scr_find_choice_label(global.cutscene[global.cutsceneNumber,5])
            instance_destroy()
            scr_cutscene_end()
            break
            
        default:
            break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_font(fnt_dialogue_rpg);
draw_set_color(c_white);

var m;

for (m = 0; m &lt; array_length_1d(menu); m+=1)
{
    if (del &lt; 40 &amp;&amp; m == 0) || (del &lt; 20 &amp;&amp; m == 1)
    {
        draw_set_colour(c_black); 
        draw_text(view_xview[0] + space + xoff + 1, view_yview[0] + (m * space) + yoff + 1,string(menu[m]))
        draw_set_colour(c_white); 
        draw_text(view_xview[0] + space + xoff, view_yview[0] + (m * space) + yoff,string(menu[m]))
    }
}

draw_set_colour(c_black);
draw_text(view_xview[0] + space + xoff + 1, view_yview[0] + yoff - space + 1,string(global.cutscene[global.cutsceneNumber,1]))
draw_set_colour(c_white);
draw_text(view_xview[0] + space + xoff, view_yview[0] + yoff - space,string(global.cutscene[global.cutsceneNumber,1]))

if del &lt;= 0
{
    draw_sprite(sprite_index, -1 , view_xview[0] - 3 + xoff, view_yview[0] + mpos * space + yoff);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

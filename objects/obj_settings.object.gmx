<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create
left = 50
right = 1230

music_follow = false
sound_follow = false
fov_follow = false

dog = c_white

music_x = 50 + global.music_vol * 1180
sound_x = 50 + global.sound_vol * 1180
fov_x = global.fov
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw

//save variables
scr_save_game()

//check time
dat = (date_get_day_of_year(date_current_datetime()) - (date_get_hour_of_year(date_current_datetime()) /24 ))
cor = (1 - dat) * 24

if !(cor &gt;= 6 &amp;&amp; cor &lt;= 22)
{
    draw_set_color(make_color_rgb(43,45,140))
}
else
{
    draw_set_color(make_color_rgb(255,106,143))
}

//Draw boxes
for (b = 0;b &lt;=3;b++)
{
    draw_set_alpha(1)
    if b == 0
    {
        draw_roundrect(-10,20+ 150*b,610,90+ 150*b,false)
    }
    else if b == 1
    {
        draw_roundrect(-10,20+ 150*b,615,90+ 150*b,false)
    }
    else if b == 2
    {
        draw_roundrect(-10,20+ 150*b,520,90+ 150*b,false)
    }
    else if b == 3
    {
        draw_roundrect(-10,20+ 150*b,575,90+ 150*b,false)
    }
    draw_set_alpha(0.6)
    draw_roundrect(40,55+ 150*b,1300,150+ 150*b,false)
}

if !(cor &gt;= 6 &amp;&amp; cor &lt;= 22)
{
   draw_set_color(c_white)
}
else
{
    draw_set_color(c_white)
    
}

//Draw music slider
draw_set_font(fnt_menu_buttons)
draw_set_alpha(0.8)
draw_set_valign(fa_center)
draw_set_halign(fa_left)
draw_text(10,50,"Music volume")
draw_text(430,50,string(floor(global.music_vol*100))+ " %")
draw_set_alpha(0.5)
draw_roundrect(50,100,1230,105,false)
draw_sprite_ext(spr_slider,0,music_x,100,1,1,0,dog,1)
if mouse_check_button(mb_left) &amp;&amp; point_in_rectangle(mouse_x,mouse_y,music_x-27,80,music_x+27,120) &amp;&amp; music_follow == false
{
    music_follow = true
}
if music_follow == true
{
    music_x = mouse_x
    if music_x &lt; 50
    {
        music_x = 50
    }
    else if music_x &gt; 1230
    {
        music_x = 1230
    }
    
    global.music_vol = (music_x-50) / (1230-50)
    var pos = 0;
    var cur = 0;
    if audio_is_playing(snd_menu_music_day)
    {
        pos = audio_sound_get_track_position(snd_menu_music_day)
        cur = snd_menu_music_day
    }
    else if audio_is_playing(snd_menu_music_night)
    {
        pos = audio_sound_get_track_position(snd_menu_music_night)
        cur = snd_menu_music_night
    }
    audio_sound_gain(cur,global.music_vol, 0);
}
if mouse_check_button_released(mb_left)
{
    music_follow = false
}


if music_x &lt; 50
{
    music_x = 50
}
else if music_x &gt; 1230
{
    music_x = 1230
}

//Draw sf slider
draw_set_alpha(0.8)
draw_text(10,200,"Sound volume")
draw_text(440,200,string(floor(global.sound_vol*100))+ " %")
draw_set_alpha(0.5)
draw_roundrect(50,250,1230,255,false)
draw_sprite_ext(spr_slider,0,sound_x,250,1,1,0,dog,1)
if mouse_check_button(mb_left) &amp;&amp; point_in_rectangle(mouse_x,mouse_y,sound_x-27,230,sound_x+27,270) &amp;&amp; sound_follow == false
{
    sound_follow = true
}
if sound_follow == true
{
    sound_x = mouse_x
    if sound_x &lt; 50
    {
        sound_x = 50
    }
    else if sound_x &gt; 1230
    {
        sound_x = 1230
    }
    global.sound_vol = (sound_x-50) / (1230-50)
}
if mouse_check_button_released(mb_left) &amp;&amp; sound_follow == true
{
    if sound_x &lt; 50
    {
        sound_x = 50
    }
    else if sound_x &gt; 1230
    {
        sound_x = 1230
    }
    sound_follow = false
    global.sound_vol = (sound_x-50) / (1230-50)
    audio_play_sound(snd_dog,10,false)
    audio_sound_gain(snd_dog,global.sound_vol, 0);
}


if sound_x &lt; 50
{
    sound_x = 50
}
else if sound_x &gt; 1230
{
    sound_x = 1230
}

//Draw fov slider
draw_set_alpha(0.8)
draw_text(10,350,"Field of View")
var fov = ((fov_x-50) / (1230-50))
draw_text(410,350,string(floor(fov*100) + 45))
draw_set_alpha(0.5)
draw_roundrect(50,400,1230,405,false)
draw_sprite_ext(spr_slider,0,fov_x,400,1,1,0,dog,1)
if mouse_check_button(mb_left) &amp;&amp; point_in_rectangle(mouse_x,mouse_y, fov_x-27,380,fov_x+27,420) &amp;&amp; fov_follow == false
{
    fov_follow  = true
}
if fov_follow  == true
{
    fov_x = mouse_x
    global.fov = fov_x
}
if mouse_check_button_released(mb_left)
{
    fov_follow  = false
}


if fov_x &lt; 50
{
    fov_x = 50
}
else if fov_x &gt; 1230
{
    fov_x = 1230
}

//Draw dayting slider
draw_set_alpha(0.8)
draw_text(10,500,"Tem Dayting")
draw_text(410,500,"100%")
draw_set_alpha(0.5)
draw_roundrect(50,550,1230,555,false)
draw_sprite_ext(spr_slider,0,1230,550,1,1,0,dog,1)

//Set mouse cursor
if point_in_rectangle(mouse_x,mouse_y,music_x-27,80,music_x+27,120) || point_in_rectangle(mouse_x,mouse_y,sound_x-27,230,sound_x+27,270) || 
point_in_rectangle(mouse_x,mouse_y, fov_x-27,380,fov_x+27,420)  || point_in_rectangle(mouse_x,mouse_y, 1230-27,530,1230+27,570) ||
music_follow == true || sound_follow == true || fov_follow == true
{
    window_set_cursor(cr_drag)
}
else
{
    window_set_cursor(cr_default)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

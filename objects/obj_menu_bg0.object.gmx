<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Create
color1 = make_colour_rgb(229, 189, 193)
color2 = make_colour_rgb(229, 189, 193)


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw bg
draw_sprite_tiled_ext(spr_fake_bg, 0, 1, 1, 10, 10, c_white, 1);
draw_sprite_ext(spr_fake_logo,0,640,200,4,4,0,c_white,1)

//Draw buttons
var out = 6

draw_set_color(make_colour_rgb(224,196,179))
draw_rectangle(1100,550,1260,700,false)
draw_set_color(make_colour_rgb(227,173,181))
draw_rectangle(1100+out,550+out,1260-out,700-out,false)


draw_set_color(color1)
draw_rectangle(1100+out*2,550+out*2,1260-out*2,625-out*2,false)
draw_set_color(color2)
draw_rectangle(1100+out*2,625+out*2,1260-out*2,700-out*2,false)

if !point_in_rectangle(mouse_x,mouse_y,1100+out*2,625+out*2,1260-out*2,700-out*2 &amp;&amp; !point_in_rectangle(mouse_x,mouse_y,1100+out*2,550+out*2,1260-out*2,625-out*2))
{
    window_set_cursor(cr_default)
}

if point_in_rectangle(mouse_x,mouse_y,1100+out*2,550+out*2,1260-out*2,625-out*2)
{
    color1 = make_colour_rgb(200, 116, 132)
    window_set_cursor(cr_drag)
    if mouse_check_button_pressed(mb_left)
    {
        window_set_cursor(cr_default)
        audio_stop_sound(snd_fakemusic)
        room_goto(rm_fake_vn)
    }
}
else
{
    color1 = make_colour_rgb(229, 189, 193)
}

if point_in_rectangle(mouse_x,mouse_y,1100+out*2,625+out*2,1260-out*2,700-out*2)
{
    color2 = make_colour_rgb(200, 116, 132)
    window_set_cursor(cr_drag)
    if mouse_check_button_pressed(mb_left)
    {
        window_set_cursor(cr_default)
        game_end();
    }
}
else
{
    color2 = make_colour_rgb(229, 189, 193)
}


draw_set_font(fnt_dialogue)
draw_set_valign(fa_center)
draw_set_halign(fa_center)
draw_set_color(c_white)
draw_text(1180,590,"Game")
draw_text(1180,660,"Quit")

//Draw version
draw_text(120,700,"Ver. 1.0.4b")

//Play music 
if audio_group_is_loaded(audiogroup_platformer_music) &amp;&amp; !audio_is_playing(snd_fakemusic)
{
    audio_play_sound(snd_fakemusic,10,true)
    audio_sound_gain(snd_fakemusic,global.music_vol*0.5, 0);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

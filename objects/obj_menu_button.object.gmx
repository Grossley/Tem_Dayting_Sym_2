<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_button_tem</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Create

//gets button string from creation code

xOffset = 0;
yOffset = 10;

playSounds = true

stroke = 5;

len = 0;
lenMax = 10;
dir = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw box and everything

//set font
draw_set_font(fnt_menu_buttons)

//Mouse over fade
if point_in_rectangle(mouse_x, mouse_y, x-string_width(text)/2, y +30,x+string_width(text)/2,y+string_height(text))
{
    draw_set_alpha(0.2)
    draw_set_color(c_white)
    draw_roundrect(x-string_width(text)/2, y+yOffset*3.5,x+string_width(text)/2,y+string_height(text)-yOffset,false)
    if mouse_check_button_pressed(mb_left)
    {
        if text == "Nyu Gamae"
        {
            var offset = 60;
            var position = 320;
            
            with obj_menu_text
            {
                instance_destroy()
            }
            for (a=0; a &lt;= instance_number(obj_menu_button);a++)
            {
                if instance_find(obj_menu_button,a).text == "yes"
                {
                    with instance_find(obj_menu_button,a)
                    {
                        instance_destroy()
                    }
                }
                if instance_find(obj_menu_button,a).text == "no"
                {
                    with instance_find(obj_menu_button,a)
                    {
                        instance_destroy()
                    }
                }
            }
            instance_create(1055,position - offset-10,obj_menu_text)
            
            with instance_create(1055,position,obj_menu_button)
            {
                text = "yes"
            }
            with instance_create(1055,position + offset,obj_menu_button)
            {
                text = "no"
            }
        }
        else if text == "yes"
        {
            scr_delete_save()
            scr_reset_persistent()
            room_goto(rm_menu0)
        }
        else if text == "no"
        {
            with obj_menu_text
            {
                instance_destroy()
            }
            for (a=0; a &lt;= instance_number(obj_menu_button);a++)
            {
                if instance_find(obj_menu_button,a).text == "yes"
                {
                    with instance_find(obj_menu_button,a)
                    {
                        instance_destroy()
                    }
                }
                if instance_find(obj_menu_button,a).text == "no"
                {
                    with instance_find(obj_menu_button,a)
                    {
                        instance_destroy()
                    }
                }
            }
        }
        else if text == "cOntinu"
        {
            room_goto(global.currentRoom)
        }
        else if text == "preFrance"
        {
            room_goto(rm_menu_preferences)
        }
        else if text == "get backs :3"
        {
            room_goto(rm_menu)
        }
        else if text == "qweet"
        {
            game_end();
        }
    }
    
    //play appropriate sound
    if playSounds == true
    {
        if text == "Nyu Gamae"
        {
            playSounds = false
            audio_play_sound(snd_hover2,8,false)
            audio_sound_gain(snd_hover2,global.sound_vol, 0);
        }
        else if text == "cOntinu"
        {
            playSounds = false
            audio_play_sound(snd_hover1,8,false)
            audio_sound_gain(snd_hover1,global.sound_vol, 0);
        }
        else if text == "preFrance"
        {
            playSounds = false
            audio_play_sound(snd_hover3,8,false)
            audio_sound_gain(snd_hover3,global.sound_vol, 0);
        }
        else if text == "qweet"
        {
            playSounds = false
            audio_play_sound(snd_hover4,8,false)
            audio_sound_gain(snd_hover4,global.sound_vol, 0);
        }
        else
        {
            playSounds = false
            audio_play_sound(snd_hover4,8,false)
            audio_sound_gain(snd_hover4,global.sound_vol, 0);
        }
    }
    if len &lt; lenMax
    {
        len += 0.2
    }
    dir -= 2
}
else
{
    if len &gt; 0
    {
        len -= 0.025
    }
    else
    {
        len = 0
    }
    dir -= 2
    
    if playSounds == false
    {
        playSounds = true
    }
}

//Align and draw text
draw_set_alpha(1)
draw_set_blend_mode(bm_normal)
draw_set_color(c_white)
draw_set_valign(fa_top)
draw_set_halign(fa_middle)
draw_text(x + xOffset + lengthdir_x(len,dir),y + yOffset + lengthdir_y(len,dir),text)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

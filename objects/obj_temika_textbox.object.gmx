<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Create

//text variables
text_speed = 0.25;
text_name = ""
textX = 30
textY = 10
sep = 36
width = 1190;
charTotal = 0;
update = false;
nameWidth = 0;
col = c_white

//text box variables
pos = 500
stroke = 8;
offsetx = 10;
nameInput = false
inputx = 640
inputy = 60
xOffset = 10;
yOffset = 10;
blinkTimer = 30;
blink = true;
uiState = 0;
uiTimer = 45;
uiMax = 45;

newx = 590
newy = 0

//audio variables
image_speed = 0.4
bleep = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1)

if update == true
{
    charTotal = string_length(obj_temika_main.text)
    //Draw text when the original string is bigger than the displayed string
    /*if string_length(obj_temika_main.text) &gt;= charTotal
    {
        if string_char_at(obj_temika_main.text, charTotal) == " "
        {
            charTotal += 1;
        }
        else
        {
            charTotal += text_speed;
        }
        
    }
    else
    {
        if obj_temika_main.text != ""
        {
            nameWidth = string_width(text_name + ": ")
            //draw_sprite_ext(spr_ui_temika,-1,95 + newx + string_width(obj_temika_main.text)/2,670 + newy, 1, 1, 0, col, 1);
        }
    }*/
    draw_set_valign(fa_top)
    draw_set_halign(fa_left)
    if string_lower(text_name) == "temika"
    {
        //draw_set_color(c_fuchsia)
        //col = c_fuchsia
        draw_set_color(make_color_rgb(217,118,232))
        col = make_color_rgb(217,118,232)
    }
    else if string_lower(text_name) == "temiru"
    {
        draw_set_color(make_color_rgb(107,30,187))
        col = make_color_rgb(165,37,255)
    }
    else if string_lower(text_name) == "temikato"
    {
        draw_set_color(make_color_rgb(106,152,188))
        col = make_color_rgb(106,152,188)
    }
    else if string_lower(text_name) == "temoko"
    {
        draw_set_color(make_color_rgb(142,46,71))
        col = make_color_rgb(142,46,71)
    }
    else if string_lower(text_name) == "temi" || string_lower(text_name) == "torrent"
    {
        draw_set_color(c_yellow)
        col = c_yellow
    }
    else if string_lower(text_name) == "tem tem"
    {
        draw_set_color(c_white)
        col = c_white
    }
    else if string_lower(text_name) == "temey"
    {
        draw_set_color(c_white)
        col = c_white
    }
    else
    {
        draw_set_color(c_white)
        col = c_white
    }
    var stroke = 3;
    
    draw_set_color(c_black)
    draw_set_font(fnt_temika_bold)
    draw_set_halign(fa_center)
    newy = -string_height_ext(string_copy(obj_temika_main.text, 1, charTotal), 40,1240) + 20
    draw_text_ext(50 + newx + stroke,675 + newy,string_copy(obj_temika_main.text, 1, charTotal),40,1240)
    draw_text_ext(50 + newx - stroke,675 + newy,string_copy(obj_temika_main.text, 1, charTotal),40,1240)
    draw_text_ext(50 + newx,675 + stroke + newy,string_copy(obj_temika_main.text, 1, charTotal),40,1240)
    draw_text_ext(50 + newx,675 - stroke + newy,string_copy(obj_temika_main.text, 1, charTotal),40,1240)
    draw_text_ext(50 + newx - stroke,675 - stroke + newy,string_copy(obj_temika_main.text, 1, charTotal),40,1240)
    draw_text_ext(50 + newx + stroke,675 - stroke + newy,string_copy(obj_temika_main.text, 1, charTotal),40,1240)
    draw_text_ext(50 + newx - stroke,675 + stroke + newy,string_copy(obj_temika_main.text, 1, charTotal),40,1240)
    draw_text_ext(50 + newx + stroke,675 + stroke+ newy,string_copy(obj_temika_main.text, 1, charTotal),40,1240)
    draw_set_color(col)
    draw_set_font(fnt_temika_bold)
    draw_text_ext(50 + newx,675 + newy,string_copy(obj_temika_main.text, 1, charTotal),40,1240)
    
    /*
    nameWidth = string_width(text_name + ": ")
    draw_text(50 + newx,655 + newy, text_name + ": ")
    draw_set_color(c_white)
    draw_text_ext(nameWidth + 50 + newx,675 + newy,string_copy(obj_temika_main.text, 1, charTotal),40,1040)*/
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
